#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#include <time.h>
#include <ctype.h>
#include "player.h"
#include "guessedword.h"
/********************************************************
 * CreateGuessedWord - Picks randomly guessed_word from file with words
 *
 * Parameters: none
 *
 * Returns
 *
 * pointer to array of char - to some word
 *
 * ********************************************************/
char* CreateGuessedWord()
{
    // open file with words
    FILE* word_file = fopen(GUESSED_WORDS_FILE, "r");
    if (word_file == NULL) {
        fprintf(stderr, "File %s could not be open!!!\n", GUESSED_WORDS_FILE);
        exit(1);
    }

    // picks randomly some number
    time_t t;
    // Intializes random number generator
    srand((unsigned) time(&t));
    int rand_number = rand() % NUMBER_OF_WORDS;
    #if defined(DEBUG)
        printf("random number was %d\n", rand_number);
    #endif

    char * line = NULL;
    size_t len = 0;
    ssize_t read;
    int line_number = 0;

    while ((read = getline(&line, &len, word_file)) != -1) {
        if (line_number == rand_number)
            break;
        #if defined(DEBUG)
            printf("%s", line);
        #endif
        line_number++;
    }

    #if defined(DEBUG)
        printf("Picked word was: %s", line);
    #endif

    fclose(word_file);

    char *guessed_word = (char *) malloc(sizeof(char) * MAX_WORD_LEN);
    strcpy(guessed_word, line);

	return (guessed_word);
};

/********************************************************
 * CreateRevealedWord - created revealed word filled with dots "."
 *
 * Parameters: length of guessed_word
 *
 * Returns
 *
 * pointer to array of char - to revealed empty word
 *
 *********************************************************/
char* CreateRevealedWord(int length)
{
    char *revealed_word = (char *) malloc(sizeof(char) * length);
    return (revealed_word);
};

